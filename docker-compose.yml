version: "3.8"

services:
  # Serviço do Banco de Dados PostgreSQL
  postgres:
    image: postgres:15 # Imagem oficial do PostgreSQL
    container_name: postgres # Nome do container
    env_file: .env
    environment: 
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432" # Expõe a porta padrão do PostgreSQL (host:container)
    volumes:
      - pgdata:/var/lib/postgresql/data  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"] 
      interval: 5s
      timeout: 5s 
      retries: 5 

  # Serviço de Desenvolvimetno do Backend (com Hot Reload)
  backend-dev:
    build:
      context: .
      target: dev # Estágio de desenvolvimento do Dockerfile
    container_name: backend-dev # Nome explícito do container
    environment:
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}"
    env_file: .env
    ports:
      - "3000:3000" # Expõe a porta da aplicação (host:container)
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "localhost:host-gateway"  # Mapeia localhost para o host Docker (para conexões internas)
    command: npm run start:dev # Comando específico para desenvolvimento com hot-reload

# Definição de volumes persistentes
volumes:
  pgdata:  # Volume para PostgreSQL